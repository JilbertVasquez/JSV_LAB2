/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package jsv_lab2;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Jilbert PC
 */
public class WelcomeForm extends javax.swing.JFrame {

    /**
     * Creates new form WelcomeForm
     */
    public WelcomeForm() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        enroll = new javax.swing.JButton();
        checkavailability = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Showcard Gothic", 1, 24)); // NOI18N
        jLabel1.setText("Students");

        enroll.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
        enroll.setText("Enroll");
        enroll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enrollActionPerformed(evt);
            }
        });

        checkavailability.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
        checkavailability.setText("Check Availability");
        checkavailability.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkavailabilityActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(129, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(enroll, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(checkavailability, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(8, 8, 8)))
                .addGap(132, 132, 132))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(67, 67, 67)
                .addComponent(enroll)
                .addGap(18, 18, 18)
                .addComponent(checkavailability)
                .addContainerGap(124, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void enrollActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enrollActionPerformed
        ApplicationForm AF = new ApplicationForm();
        AF.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_enrollActionPerformed

    private void checkavailabilityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkavailabilityActionPerformed
        AvailabilityForm AF = new AvailabilityForm();
        
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ConfirmationForm.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        String dbName = "StudentEnrollment";
        try {
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/"+dbName, "root", "root");
            
            String sql = "select COUNT(course1) from CourseDB  WHERE course1 = 'CE' ";
            PreparedStatement ps = con.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            if (rs.next()) {
                String ce_sum = rs.getString("COUNT(course1)");
                AF.ce_avail.setText(ce_sum + " / 225");
            }
            
            String sql2 = "select COUNT(course1) from CourseDB  WHERE course1 = 'CPE' ";
            PreparedStatement ps2 = con.prepareStatement(sql2);
            ResultSet rs2 = ps2.executeQuery();
            if (rs2.next()) {
                String cpe_sum = rs2.getString("COUNT(course1)");
                AF.cpe_avail.setText(cpe_sum + " / 225");
            }
            
            String sql3 = "select COUNT(course1) from CourseDB  WHERE course1 = 'EE' ";
            PreparedStatement ps3 = con.prepareStatement(sql3);
            ResultSet rs3 = ps3.executeQuery();
            if (rs3.next()) {
                String ee_sum = rs3.getString("COUNT(course1)");
                AF.ee_avail.setText(ee_sum + " / 225");
            }
            
            String sql4 = "select COUNT(course1) from CourseDB  WHERE course1 = 'IE' ";
            PreparedStatement ps4 = con.prepareStatement(sql4);
            ResultSet rs4 = ps4.executeQuery();
            if (rs4.next()) {
                String ie_sum = rs4.getString("COUNT(course1)");
                AF.ie_avail.setText(ie_sum + " / 225");
            }
            
            String sql5 = "select COUNT(course1) from CourseDB  WHERE course1 = 'ChE' ";
            PreparedStatement ps5 = con.prepareStatement(sql5);
            ResultSet rs5 = ps5.executeQuery();
            if (rs5.next()) {
                String che_sum = rs5.getString("COUNT(course1)");
                AF.che_avail.setText(che_sum + " / 225");
            }
            
            String sql6 = "select COUNT(course1) from CourseDB  WHERE course1 = 'GE' ";
            PreparedStatement ps6 = con.prepareStatement(sql6);
            ResultSet rs6 = ps6.executeQuery();
            if (rs6.next()) {
                String ge_sum = rs6.getString("COUNT(course1)");
                AF.ge_avail.setText(ge_sum + " / 225");
            }
            
            String sql7 = "select COUNT(course1) from CourseDB  WHERE course1 = 'SE' ";
            PreparedStatement ps7 = con.prepareStatement(sql7);
            ResultSet rs7 = ps7.executeQuery();
            if (rs7.next()) {
                String se_sum = rs7.getString("COUNT(course1)");
                AF.se_avail.setText(se_sum + " / 225");
            }
            
            String sql8 = "select COUNT(course1) from CourseDB  WHERE course1 = 'PE' ";
            PreparedStatement ps8 = con.prepareStatement(sql8);
            ResultSet rs8 = ps8.executeQuery();
            if (rs8.next()) {
                String pe_sum = rs8.getString("COUNT(course1)");
                AF.pe_avail.setText(pe_sum + " / 225");
            }
            
            String sql9 = "select COUNT(course1) from CourseDB  WHERE course1 = 'ME' ";
            PreparedStatement ps9 = con.prepareStatement(sql9);
            ResultSet rs9 = ps9.executeQuery();
            if (rs9.next()) {
                String me_sum = rs9.getString("COUNT(course1)");
                AF.me_avail.setText(me_sum + " / 225");
            }

        } catch (SQLException ex) {
            Logger.getLogger(ConfirmationForm.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        AF.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_checkavailabilityActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(WelcomeForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(WelcomeForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(WelcomeForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(WelcomeForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new WelcomeForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton checkavailability;
    private javax.swing.JButton enroll;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
